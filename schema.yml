openapi: 3.0.3
info:
  title: ''
  version: 0.0.0
paths:
  /gigwork/api/gigs/:
    get:
      operationId: gigwork_api_gigs_list
      description: |-
        API endpoint to view and edit gigs
        this viewset provides default actions inherited from 'ModelViewset',
        theses are: 'list', 'create', 'destroy', 'retrieve', 'update'.
      parameters:
      - in: query
        name: end_date
        schema:
          type: string
          format: date-time
      - in: query
        name: handler
        schema:
          type: integer
      - in: query
        name: id
        schema:
          type: integer
      - in: query
        name: start_date
        schema:
          type: string
          format: date-time
      - in: query
        name: status
        schema:
          type: string
          enum:
          - completed
          - in_progress
          - pending
        description: |-
          * `pending` - Pending
          * `in_progress` - In Progress
          * `completed` - Completed
      tags:
      - gigwork
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Gig'
          description: ''
    post:
      operationId: gigwork_api_gigs_create
      description: |-
        API endpoint to view and edit gigs
        this viewset provides default actions inherited from 'ModelViewset',
        theses are: 'list', 'create', 'destroy', 'retrieve', 'update'.
      tags:
      - gigwork
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Gig'
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Gig'
          description: ''
  /gigwork/api/gigs/{id}/:
    get:
      operationId: gigwork_api_gigs_retrieve
      description: |-
        API endpoint to view and edit gigs
        this viewset provides default actions inherited from 'ModelViewset',
        theses are: 'list', 'create', 'destroy', 'retrieve', 'update'.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this gig.
        required: true
      tags:
      - gigwork
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Gig'
          description: ''
    put:
      operationId: gigwork_api_gigs_update
      description: |-
        API endpoint to view and edit gigs
        this viewset provides default actions inherited from 'ModelViewset',
        theses are: 'list', 'create', 'destroy', 'retrieve', 'update'.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this gig.
        required: true
      tags:
      - gigwork
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Gig'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Gig'
          description: ''
    patch:
      operationId: gigwork_api_gigs_partial_update
      description: |-
        API endpoint to view and edit gigs
        this viewset provides default actions inherited from 'ModelViewset',
        theses are: 'list', 'create', 'destroy', 'retrieve', 'update'.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this gig.
        required: true
      tags:
      - gigwork
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedGig'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Gig'
          description: ''
    delete:
      operationId: gigwork_api_gigs_destroy
      description: |-
        API endpoint to view and edit gigs
        this viewset provides default actions inherited from 'ModelViewset',
        theses are: 'list', 'create', 'destroy', 'retrieve', 'update'.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this gig.
        required: true
      tags:
      - gigwork
      responses:
        '204':
          description: No response body
  /gigwork/api/postings/:
    get:
      operationId: gigwork_api_postings_list
      description: |-
        API endpoint to view and edit postings
        this viewset provides default actions inherited from 'ModelViewset',
        theses are: 'list', 'create', 'destroy', 'retrieve', 'update'.
      parameters:
      - in: query
        name: author
        schema:
          type: integer
      - in: query
        name: created_at
        schema:
          type: string
          format: date-time
      - in: query
        name: description
        schema:
          type: string
      - in: query
        name: expires_at
        schema:
          type: string
          format: date-time
      - in: query
        name: id
        schema:
          type: integer
      - in: query
        name: price
        schema:
          type: number
      - in: query
        name: status
        schema:
          type: string
          enum:
          - accepted
          - expired
          - open
        description: |-
          * `open` - Open
          * `expired` - Expired
          * `accepted` - Accepted
      - in: query
        name: title
        schema:
          type: string
      tags:
      - gigwork
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Posting'
          description: ''
    post:
      operationId: gigwork_api_postings_create
      description: |-
        API endpoint to view and edit postings
        this viewset provides default actions inherited from 'ModelViewset',
        theses are: 'list', 'create', 'destroy', 'retrieve', 'update'.
      tags:
      - gigwork
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Posting'
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Posting'
          description: ''
  /gigwork/api/postings/{id}/:
    get:
      operationId: gigwork_api_postings_retrieve
      description: |-
        API endpoint to view and edit postings
        this viewset provides default actions inherited from 'ModelViewset',
        theses are: 'list', 'create', 'destroy', 'retrieve', 'update'.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this posting.
        required: true
      tags:
      - gigwork
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Posting'
          description: ''
    put:
      operationId: gigwork_api_postings_update
      description: |-
        API endpoint to view and edit postings
        this viewset provides default actions inherited from 'ModelViewset',
        theses are: 'list', 'create', 'destroy', 'retrieve', 'update'.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this posting.
        required: true
      tags:
      - gigwork
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Posting'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Posting'
          description: ''
    patch:
      operationId: gigwork_api_postings_partial_update
      description: |-
        API endpoint to view and edit postings
        this viewset provides default actions inherited from 'ModelViewset',
        theses are: 'list', 'create', 'destroy', 'retrieve', 'update'.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this posting.
        required: true
      tags:
      - gigwork
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedPosting'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Posting'
          description: ''
    delete:
      operationId: gigwork_api_postings_destroy
      description: |-
        API endpoint to view and edit postings
        this viewset provides default actions inherited from 'ModelViewset',
        theses are: 'list', 'create', 'destroy', 'retrieve', 'update'.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this posting.
        required: true
      tags:
      - gigwork
      responses:
        '204':
          description: No response body
  /gigwork/api/root/:
    get:
      operationId: gigwork_api_root_retrieve
      tags:
      - gigwork
      security:
      - tokenAuth: []
      - basicAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /gigwork/api/schema/:
    get:
      operationId: gigwork_api_schema_retrieve
      description: |-
        OpenApi3 schema for this API. Format can be selected via content negotiation.

        - YAML: application/vnd.oai.openapi
        - JSON: application/vnd.oai.openapi+json
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - json
          - yaml
      - in: query
        name: lang
        schema:
          type: string
          enum:
          - af
          - ar
          - ar-dz
          - ast
          - az
          - be
          - bg
          - bn
          - br
          - bs
          - ca
          - ckb
          - cs
          - cy
          - da
          - de
          - dsb
          - el
          - en
          - en-au
          - en-gb
          - eo
          - es
          - es-ar
          - es-co
          - es-mx
          - es-ni
          - es-ve
          - et
          - eu
          - fa
          - fi
          - fr
          - fy
          - ga
          - gd
          - gl
          - he
          - hi
          - hr
          - hsb
          - hu
          - hy
          - ia
          - id
          - ig
          - io
          - is
          - it
          - ja
          - ka
          - kab
          - kk
          - km
          - kn
          - ko
          - ky
          - lb
          - lt
          - lv
          - mk
          - ml
          - mn
          - mr
          - ms
          - my
          - nb
          - ne
          - nl
          - nn
          - os
          - pa
          - pl
          - pt
          - pt-br
          - ro
          - ru
          - sk
          - sl
          - sq
          - sr
          - sr-latn
          - sv
          - sw
          - ta
          - te
          - tg
          - th
          - tk
          - tr
          - tt
          - udm
          - ug
          - uk
          - ur
          - uz
          - vi
          - zh-hans
          - zh-hant
      tags:
      - gigwork
      security:
      - tokenAuth: []
      - basicAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/vnd.oai.openapi:
              schema:
                type: object
                additionalProperties: {}
            application/yaml:
              schema:
                type: object
                additionalProperties: {}
            application/vnd.oai.openapi+json:
              schema:
                type: object
                additionalProperties: {}
            application/json:
              schema:
                type: object
                additionalProperties: {}
          description: ''
  /gigwork/api/users/:
    get:
      operationId: gigwork_api_users_list
      description: |-
        API endpoint to view and edit users
        this viewset provides default actions inherited from 'ModelViewSet',
        theses are: 'list', 'create', 'destroy', 'retrieve', 'update'.
      parameters:
      - in: query
        name: address
        schema:
          type: string
      - in: query
        name: email
        schema:
          type: string
      - in: query
        name: first_name
        schema:
          type: string
      - in: query
        name: id
        schema:
          type: integer
      - in: query
        name: last_name
        schema:
          type: string
      - in: query
        name: phone_number
        schema:
          type: string
      tags:
      - gigwork
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
          description: ''
    post:
      operationId: gigwork_api_users_create
      description: |-
        create new user, return authentication token for that user.
        data is sent from the client in json format, required fields are: first_name,
        last_name, email.
      tags:
      - gigwork
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
  /gigwork/api/users/{id}/:
    get:
      operationId: gigwork_api_users_retrieve
      description: |-
        API endpoint to view and edit users
        this viewset provides default actions inherited from 'ModelViewSet',
        theses are: 'list', 'create', 'destroy', 'retrieve', 'update'.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this user.
        required: true
      tags:
      - gigwork
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    put:
      operationId: gigwork_api_users_update
      description: |-
        API endpoint to view and edit users
        this viewset provides default actions inherited from 'ModelViewSet',
        theses are: 'list', 'create', 'destroy', 'retrieve', 'update'.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this user.
        required: true
      tags:
      - gigwork
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    patch:
      operationId: gigwork_api_users_partial_update
      description: |-
        API endpoint to view and edit users
        this viewset provides default actions inherited from 'ModelViewSet',
        theses are: 'list', 'create', 'destroy', 'retrieve', 'update'.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this user.
        required: true
      tags:
      - gigwork
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUser'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    delete:
      operationId: gigwork_api_users_destroy
      description: |-
        API endpoint to view and edit users
        this viewset provides default actions inherited from 'ModelViewSet',
        theses are: 'list', 'create', 'destroy', 'retrieve', 'update'.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this user.
        required: true
      tags:
      - gigwork
      responses:
        '204':
          description: No response body
components:
  schemas:
    Gig:
      type: object
      description: convert 'Gig' model into a python dictionary
      properties:
        id:
          type: integer
          readOnly: true
        handler:
          allOf:
          - $ref: '#/components/schemas/PublicUser'
          readOnly: true
        posting:
          type: integer
        start_date:
          type: string
          format: date-time
          readOnly: true
        end_date:
          type: string
          format: date-time
          nullable: true
        status:
          $ref: '#/components/schemas/GigStatusEnum'
      required:
      - handler
      - id
      - posting
      - start_date
    GigStatusEnum:
      enum:
      - pending
      - in_progress
      - completed
      type: string
      description: |-
        * `pending` - Pending
        * `in_progress` - In Progress
        * `completed` - Completed
    PatchedGig:
      type: object
      description: convert 'Gig' model into a python dictionary
      properties:
        id:
          type: integer
          readOnly: true
        handler:
          allOf:
          - $ref: '#/components/schemas/PublicUser'
          readOnly: true
        posting:
          type: integer
        start_date:
          type: string
          format: date-time
          readOnly: true
        end_date:
          type: string
          format: date-time
          nullable: true
        status:
          $ref: '#/components/schemas/GigStatusEnum'
    PatchedPosting:
      type: object
      description: convert 'Posting' model into a python dictionary
      properties:
        id:
          type: integer
          readOnly: true
        title:
          type: string
          maxLength: 100
        author:
          allOf:
          - $ref: '#/components/schemas/PublicUser'
          readOnly: true
        description:
          type: string
        created_at:
          type: string
          format: date-time
          readOnly: true
        expires_at:
          type: string
          format: date-time
          nullable: true
        price:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        status:
          $ref: '#/components/schemas/PostingStatusEnum'
    PatchedUser:
      type: object
      description: convert 'User' model into a python dictionary
      properties:
        id:
          type: integer
          readOnly: true
        first_name:
          type: string
          maxLength: 50
        last_name:
          type: string
          maxLength: 50
        email:
          type: string
          format: email
          maxLength: 254
        phone_number:
          type: string
        address:
          type: string
    Posting:
      type: object
      description: convert 'Posting' model into a python dictionary
      properties:
        id:
          type: integer
          readOnly: true
        title:
          type: string
          maxLength: 100
        author:
          allOf:
          - $ref: '#/components/schemas/PublicUser'
          readOnly: true
        description:
          type: string
        created_at:
          type: string
          format: date-time
          readOnly: true
        expires_at:
          type: string
          format: date-time
          nullable: true
        price:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        status:
          $ref: '#/components/schemas/PostingStatusEnum'
      required:
      - author
      - created_at
      - description
      - id
      - price
      - title
    PostingStatusEnum:
      enum:
      - open
      - expired
      - accepted
      type: string
      description: |-
        * `open` - Open
        * `expired` - Expired
        * `accepted` - Accepted
    PublicUser:
      type: object
      description: |-
        convert 'User' model into a python dictionary.
        this class contains only fields that would be available to other users than the owner.
      properties:
        id:
          type: integer
          readOnly: true
        first_name:
          type: string
          maxLength: 50
        last_name:
          type: string
          maxLength: 50
      required:
      - first_name
      - id
      - last_name
    User:
      type: object
      description: convert 'User' model into a python dictionary
      properties:
        id:
          type: integer
          readOnly: true
        first_name:
          type: string
          maxLength: 50
        last_name:
          type: string
          maxLength: 50
        email:
          type: string
          format: email
          maxLength: 254
        phone_number:
          type: string
        address:
          type: string
      required:
      - email
      - first_name
      - id
      - last_name
  securitySchemes:
    basicAuth:
      type: http
      scheme: basic
    cookieAuth:
      type: apiKey
      in: cookie
      name: sessionid
    tokenAuth:
      type: apiKey
      in: header
      name: Authorization
      description: Token-based authentication with required prefix "Token"
